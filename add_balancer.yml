---
- name: add_balancer.yml | Add haproxy balancer node (to the cluster "{{ patroni_cluster_name }}")
  hosts: balancers
  become: true
  become_method: sudo
  any_errors_fatal: true
  gather_facts: true
  vars_files:
    - vars/main.yml
    - vars/system.yml

  pre_tasks:
    - name: Include OS-specific variables
      ansible.builtin.include_vars: "vars/{{ ansible_os_family }}.yml"
      tags: always

    - name: "[Pre-Check] Checking Linux distribution"
      ansible.builtin.fail:
        msg: "{{ ansible_distribution }} is not supported"
      when: ansible_distribution not in os_valid_distributions

    - name: "[Pre-Check] Checking version of OS Linux"
      ansible.builtin.fail:
        msg: "{{ ansible_distribution_version }} of {{ ansible_distribution }} is not supported"
      when: ansible_distribution_version is version_compare(os_minimum_versions[ansible_distribution], '<')

    - name: "[Pre-Check] Check if there is a node with new_node set to true"
      ansible.builtin.set_fact:
        new_nodes: "{{ new_nodes | default([]) + [item] }}"
      when: hostvars[item]['new_node'] | default(false) | bool
      loop: "{{ groups['balancers'] }}"
      tags: always

    # Stop, if no nodes found with new_node variable
    - name: "Pre-Check error. No nodes found with new_node set to true"
      run_once: true # noqa run-once
      ansible.builtin.fail:
        msg: "Please specify the new_node=true variable for the new balancer server to add it to the existing cluster."
      when: new_nodes | default([]) | length < 1

    - name: Print a list of new balancer nodes
      run_once: true # noqa run-once
      ansible.builtin.debug:
        var: new_nodes
      tags: always

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
      register: apt_status
      until: apt_status is success
      delay: 5
      retries: 3
      environment: "{{ proxy_env | default({}) }}"
      when:
        - new_node | default(false) | bool
        - ansible_os_family == "Debian"
        - installation_method == "repo"

    - name: Make sure the gnupg and apt-transport-https packages are present
      ansible.builtin.apt:
        pkg:
          - gnupg
          - apt-transport-https
        state: present
      register: apt_status
      until: apt_status is success
      delay: 5
      retries: 3
      environment: "{{ proxy_env | default({}) }}"
      when:
        - new_node | default(false) | bool
        - ansible_os_family == "Debian"
        - installation_method == "repo"

    - name: Build a firewall_ports_dynamic_var
      ansible.builtin.set_fact:
        firewall_ports_dynamic_var: "{{ firewall_ports_dynamic_var | default([]) + (firewall_allowed_tcp_ports_for[item] | default([])) }}"
      loop: "{{ hostvars[inventory_hostname].group_names }}"
      when:
        - new_node | default(false) | bool
        - firewall_enabled_at_boot | bool
      tags: firewall

    - name: Build a firewall_rules_dynamic_var
      ansible.builtin.set_fact:
        firewall_rules_dynamic_var: "{{ firewall_rules_dynamic_var | default([]) + (firewall_additional_rules_for[item] | default([])) }}"
      loop: "{{ hostvars[inventory_hostname].group_names }}"
      when:
        - new_node | default(false) | bool
        - firewall_enabled_at_boot | bool
      tags: firewall

  roles:
    - role: ansible-role-firewall
      environment: "{{ proxy_env | default({}) }}"
      vars:
        firewall_allowed_tcp_ports: "{{ firewall_ports_dynamic_var | default([]) | unique }}"
        firewall_additional_rules: "{{ firewall_rules_dynamic_var | default([]) | unique }}"
      when:
        - new_node | default(false) | bool
        - firewall_enabled_at_boot | bool
      tags: firewall

    - role: sysctl
      when:
        - new_node | default(false) | bool

  tasks:
    - name: Add host to group new_balancer (in-memory inventory)
      ansible.builtin.add_host:
        name: "{{ item }}"
        groups: new_balancer
      loop: "{{ new_nodes }}"
      changed_when: false
      tags: always

- name: add_balancer.yml | Add load balancer
  hosts: new_balancer
  become: true
  become_method: sudo
  gather_facts: true
  any_errors_fatal: true
  vars_files:
    - vars/main.yml
    - vars/system.yml
  vars:
    add_balancer: true

  pre_tasks:
    - name: Include OS-specific variables
      ansible.builtin.include_vars: "vars/{{ ansible_os_family }}.yml"
      tags: always

  roles:
    - role: hostname
    - role: resolv_conf

    - role: haproxy
      when: with_haproxy_load_balancing|bool

    - role: confd
      when: dcs_type == "etcd" and
        with_haproxy_load_balancing|bool

    - role: keepalived
      when: cluster_vip is defined and cluster_vip | length > 0 and
        with_haproxy_load_balancing|bool
