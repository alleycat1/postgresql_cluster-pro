---
# https://pip.pypa.io/en/stable/installing/
# Python 2.7 reached the end of its life on January 1st, 2020.
# A future version of pip will drop support for Python 2.7.
# Installing latest version pip3 for python3

# install pip package from repo (installation_method: "repo")
- block:  # with get-pip.py
    - name: pip | get-pip.py
      ansible.builtin.get_url:
        url: "{{ pip_package_repo }}"
        dest: /tmp/
        timeout: 60
        validate_certs: false
      register: get_pip_result
      when: ansible_python_version is version('3.7', '>=')

    - name: pip | get-pip.py
      ansible.builtin.get_url:
        url: "https://bootstrap.pypa.io/pip/3.6/get-pip.py"
        dest: /tmp/
        timeout: 60
        validate_certs: false
      register: get_pip_result
      when:
        - ansible_python_version is version('3.6', '>=')
        - ansible_python_version is version('3.7', '<')

    - name: pip | install pip
      ansible.builtin.command: >
        python3 get-pip.py
        --trusted-host=pypi.python.org
        --trusted-host=pypi.org
        --trusted-host=files.pythonhosted.org
      args:
        chdir: /tmp/
      when: get_pip_result.changed
  environment: "{{ proxy_env | default({}) }}"
  when: installation_method == "repo" and
        patroni_installation_method == "pip" and
        pip_package_repo is search("get-pip.py")
  tags: pip_install, pip

- block:  # with tar.gz
    - name: pip | download pip package
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: /tmp/
        timeout: 60
        validate_certs: false
      loop:
        - "{{ pip_package_repo }}"
      register: pip_package_result

    - name: pip | extract pip package into /tmp
      ansible.builtin.unarchive:
        src: "/tmp/{{ pip_package_repo | basename }}"
        dest: /tmp/
        extra_opts:
          - --no-same-owner
        remote_src: true

    - name: pip | install pip
      ansible.builtin.command: "python3 setup.py install"
      args:
        chdir: "/tmp/{{ pip_package_repo.split('.tar.gz')[0] | basename }}"
      when: pip_package_result.changed
  when: installation_method == "repo" and
        pip_package_repo is search("tar.gz")
  tags: pip_install, pip

# install pip package from file (installation_method: "file")
- block:
    - name: pip | extract pip package into /tmp
      ansible.builtin.unarchive:
        src: "{{ pip_package_file }}"
        dest: /tmp/
        extra_opts:
          - --no-same-owner
      register: pip_package_result

    - name: pip | install pip
      ansible.builtin.command: python3 setup.py install
      args:
        chdir: "/tmp/{{ pip_package_file.split('.tar.gz')[0] | basename }}"
      when: pip_package_result.changed
  when: installation_method == "file" and
        pip_package_file | length > 0
  tags: pip_install, pip

...
