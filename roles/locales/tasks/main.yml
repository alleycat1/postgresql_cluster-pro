---

# for OracleLinux 7
- name: Reinstall glibc-common to avoid problem when generating locales
  ansible.builtin.command: yum reinstall glibc-common -y
  environment: "{{ proxy_env | default({}) }}"
  when: (ansible_distribution == "OracleLinux" and
         ansible_distribution_major_version == '7')

- block:
    - name: Generate locales
      become: true
      community.general.locale_gen:
        name: "{{ item.language_country }}.{{ item.encoding }}"
        state: present
      loop: "{{ locale_gen | flatten(1) }}"
      when: ansible_os_family == "Debian"

    - name: Generate locales
      become: true
      ansible.builtin.command: >
        localedef -c
        -i {{ item.language_country }}
        -f {{ item.encoding }} {{ item.language_country }}.{{ item.encoding }}
      changed_when: false
      loop: "{{ locale_gen | flatten(1) }}"
      when: ansible_os_family == "RedHat" and
            ansible_distribution_major_version == '7'

    - name: Install glibc-langpack
      ansible.builtin.dnf:
        name: "{{ item }}"
      loop: "{{ glibc_langpack }}"
      environment: "{{ proxy_env | default({}) }}"
      when: ansible_os_family == "RedHat" and
            ansible_distribution_major_version >= '8'
  when: locale_gen is defined and locale_gen | length > 0
  tags: locales, locale_gen

- block:
    - name: Set locale "{{ locale }}" into /etc/default/locale
      ansible.builtin.lineinfile:
        dest: "/etc/default/locale"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        owner: root
        group: root
        mode: '0644'
      loop:
        - { regexp: '^LANG=', line: 'LANG={{ locale }}' }
        - { regexp: '^LANGUAGE=', line: 'LANGUAGE={{ locale }}' }
        - { regexp: '^LC_ALL=', line: 'LC_ALL={{ locale }}' }
      loop_control:
        label: "{{ item.line }}"
      when: ansible_os_family == "Debian"

    - name: Check that the /etc/locale.conf exists
      ansible.builtin.stat:
        path: /etc/locale.conf
      register: locale_conf
      when: ansible_os_family == "RedHat"

    - name: Set locale "{{ locale }}" into /etc/locale.conf
      ansible.builtin.lineinfile:
        dest: "/etc/locale.conf"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        owner: root
        group: root
        mode: '0644'
      loop:
        - { regexp: '^LANG=', line: 'LANG={{ locale }}' }
        - { regexp: '^LC_ALL=', line: 'LC_ALL={{ locale }}' }
      loop_control:
        label: "{{ item.line }}"
      when: ansible_os_family == "RedHat" and locale_conf.stat.exists

    - name: Set locale "{{ locale }}" into /etc/environment
      ansible.builtin.lineinfile:
        dest: "/etc/environment"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        owner: root
        group: root
        mode: '0644'
      loop:
        - { regexp: 'LANG=', line: 'export LANG={{ locale }}' }
        - { regexp: 'LC_ALL=', line: 'export LC_ALL={{ locale }}' }
      loop_control:
        label: "{{ item.line }}"
      when: ansible_os_family == "RedHat"
  ignore_errors: true
  when: locale is defined and locale | length > 0
  tags: locales, locale_env

...
