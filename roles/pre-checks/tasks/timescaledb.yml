---

- name: TimescaleDB | Checking PostgreSQL version
  run_once: true
  ansible.builtin.fail:
    msg:
      - "The current PostgreSQL version ({{ postgresql_version }}) is not supported by the TimescaleDB."
      - "PostgreSQL version must be {{ timescale_minimal_pg_version }} or higher."
  when:
    - postgresql_version|string is version(timescale_minimal_pg_version|string, '<')

- block:
    - name: TimescaleDB | Ensure 'timescaledb' is in 'shared_preload_libraries'
      ansible.builtin.set_fact:
        # This complex line does several things:
        # 1. It takes the current list of PostgreSQL parameters,
        # 2. Removes any item where the option is 'shared_preload_libraries',
        # 3. Then appends a new 'shared_preload_libraries' item at the end.
        # The new value of this item is based on whether 'timescaledb' is already present in the old value.
        # If it is not present, it appends ',timescaledb' to the old value. Otherwise, it leaves the value unchanged.
        postgresql_parameters: >-
          {{ postgresql_parameters | rejectattr('option', 'equalto', 'shared_preload_libraries') | list
          + [{'option': 'shared_preload_libraries', 'value': new_value}] }}
      vars:
        # Find the last item in postgresql_parameters where the option is 'shared_preload_libraries'
        shared_preload_libraries_item: >-
          {{
            postgresql_parameters
            | selectattr('option', 'equalto', 'shared_preload_libraries')
            | list | last | default({'value': ''})
          }}
        # Determine the new value based on whether 'timescaledb' is already present
        new_value: >-
          {{
            (shared_preload_libraries_item.value ~ (',' if shared_preload_libraries_item.value else '')
            if 'timescaledb' not in shared_preload_libraries_item.value.split(',') else shared_preload_libraries_item.value)
            ~ ('timescaledb' if 'timescaledb' not in shared_preload_libraries_item.value.split(',') else '')
          }}
  when:
    - enable_timescale is defined
    - enable_timescale | bool
