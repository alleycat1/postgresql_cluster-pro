---
# pre-check
- name: Check PostgreSQL is started and accepting connections
  become: true
  become_user: postgres
  ansible.builtin.command: "{{ postgresql_bin_dir }}/pg_isready -p {{ postgresql_port }}"
  register: pg_isready_result
  until: pg_isready_result.rc == 0
  retries: 30
  delay: 2
  changed_when: false

# Stop the secondary
- block:
    - name: Execute CHECKPOINT before stopping PostgreSQL
      become: true
      become_user: postgres
      ansible.builtin.command: psql -tAXc "CHECKPOINT"

    - name: "Stop Patroni service on the Cluster Replica ({{ ansible_hostname }})"
      become: true
      become_user: root
      ansible.builtin.service:
        name: patroni
        state: stopped
  when: inventory_hostname in groups['secondary']

# Stop the old primary (now secondary, after switchover)
- block:
    - name: Execute CHECKPOINT before stopping PostgreSQL
      become: true
      become_user: postgres
      ansible.builtin.command: psql -tAXc "CHECKPOINT"

    - name: "Stop Patroni service on the old Cluster Leader ({{ ansible_hostname }})"
      become: true
      become_user: root
      ansible.builtin.service:
        name: patroni
        state: stopped
  when: inventory_hostname in groups['primary']
...
