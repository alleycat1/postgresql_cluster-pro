---
- name: Start Patroni service
  become: true
  become_user: root
  ansible.builtin.service:
    name: patroni
    state: started

- name: "Wait for port {{ patroni_restapi_port }} to become open on the host"
  ansible.builtin.wait_for:
    port: '{{ patroni_restapi_port }}'
    host: '{{ hostvars[inventory_hostname][''inventory_hostname''] }}'
    state: started
    timeout: 60
    delay: 10

- name: Check that the Patroni is healthy
  ansible.builtin.uri:
    url: http://{{ inventory_hostname }}:{{ patroni_restapi_port }}/health
    status_code: 200
  register: patroni_replica_result
  until: patroni_replica_result.status == 200
  retries: 300
  delay: 2

- name: Check PostgreSQL is started and accepting connections
  become: true
  become_user: postgres
  ansible.builtin.command: "{{ postgresql_bin_dir }}/pg_isready -p {{ postgresql_port }}"
  register: pg_isready_result
  until: pg_isready_result.rc == 0
  retries: 30
  delay: 2
  changed_when: false
...
