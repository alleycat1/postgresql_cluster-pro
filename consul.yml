---
- name: consul.yml | Consul Playbook
  hosts: localhost
  any_errors_fatal: true
  gather_facts: false
  vars_files:
    - vars/main.yml
  tasks:
    - name: Check if the consul role requirements (ansible.utils) are installed
      ansible.builtin.command: ansible-galaxy collection list ansible.utils
      changed_when: false
      failed_when: false
      register: ansible_utils_result

    - name: Consul role requirements
      ansible.builtin.fail:
        msg:
          - "Please install consul role requirements (ansible.utils)"
          - "ansible-galaxy install -r roles/consul/requirements.yml"
      when:
        - ansible_utils_result.stderr is search("unable to find")

- name: consul.yml | Configure Consul instances
  hosts: consul_instances
  become: true
  become_method: sudo
  any_errors_fatal: true
  gather_facts: true
  vars_files:
    - vars/main.yml
    - vars/system.yml
  environment: "{{ proxy_env | default({}) }}"

  pre_tasks:
    - name: Include OS-specific variables
      ansible.builtin.include_vars: "vars/{{ ansible_os_family }}.yml"
      tags: always

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
      register: apt_status
      until: apt_status is success
      delay: 5
      retries: 3
      when: ansible_os_family == "Debian" and installation_method == "repo"

    - name: Make sure the gnupg and apt-transport-https packages are present
      ansible.builtin.apt:
        pkg:
          - gnupg
          - apt-transport-https
        state: present
      register: apt_status
      until: apt_status is success
      delay: 5
      retries: 3
      when: ansible_os_family == "Debian" and installation_method == "repo"

    - name: Make sure the python3-pip package are present
      ansible.builtin.package:
        name: python3-pip
        state: present
      register: package_status
      until: package_status is success
      delay: 5
      retries: 3

    - name: Make sure the unzip package are present on the control host
      run_once: true # noqa run-once
      delegate_to: 127.0.0.1
      ansible.builtin.package:
        name: unzip
        state: present
      register: package_status
      until: package_status is success
      delay: 5
      retries: 3
      ignore_errors: true

    - name: Build a firewall_ports_dynamic_var
      ansible.builtin.set_fact:
        firewall_ports_dynamic_var: "{{ firewall_ports_dynamic_var | default([]) + (firewall_allowed_tcp_ports_for[item] | default([])) }}"
      loop: "{{ hostvars[inventory_hostname].group_names }}"
      when: firewall_enabled_at_boot | bool
      tags: firewall

    - name: Build a firewall_rules_dynamic_var
      ansible.builtin.set_fact:
        firewall_rules_dynamic_var: "{{ firewall_rules_dynamic_var | default([]) + (firewall_additional_rules_for[item] | default([])) }}"
      loop: "{{ hostvars[inventory_hostname].group_names }}"
      when: firewall_enabled_at_boot | bool
      tags: firewall

  roles:
    - role: ansible-role-firewall
      vars:
        firewall_allowed_tcp_ports: "{{ firewall_ports_dynamic_var | default([]) | unique }}"
        firewall_additional_rules: "{{ firewall_rules_dynamic_var | default([]) | unique }}"
      when: firewall_enabled_at_boot|bool
      tags: firewall

    - role: hostname
    - role: resolv_conf
      vars:
        nameservers: [127.0.0.1] # add a nameserver entry poining to localhost for dnsmasq.
    - role: etc_hosts
    - role: sysctl
    - role: timezone
    - role: ntp

    - role: consul
