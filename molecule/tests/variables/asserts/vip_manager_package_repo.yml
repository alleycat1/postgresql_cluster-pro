---
# 🚀 These tasks aim to define and verify 'vip_manager_package_repo' for different OS
# 🎯 The objective is to ensure accurate url

# 🔄 Define the vip_manager_version
# This is the version of the VIP Manager that we will be using in our tests
- name: Molecule.tests.variables.asserts.vip_manager_package_repo| Common | Setting vip_manager_version
  run_once: true
  ansible.builtin.set_fact:
    vip_manager_version: "1.0.0"

# ===============================================
# 💾 Start Debian-specific operations and tests
# ===============================================

# 📁 Incorporate Debian-specific variables
# This task includes variables that are specific to Debian OS
- name: Molecule.tests.variables.asserts.vip_manager_package_repo | Debian | Incorporate RedHat-specific Variables
  run_once: true
  ansible.builtin.include_vars:
    file: ../../../../vars/Debian.yml

# 🔄 Define the origin_vip_manager_package_repo for Debian
# This task defines the expected URL for the VIP Manager package for Debian OS
- name: Molecule.tests.variables.asserts.vip_manager_package_repo | Debian | Define origin_vip_manager_package_repo
  run_once: true
  ansible.builtin.set_fact: # yamllint disable rule:line-length
    origin_vip_manager_package_repo: "https://github.com/cybertec-postgresql/vip-manager/releases/download/v{{ vip_manager_version }}/vip-manager_{{ vip_manager_version }}_Linux_x86_64.deb"

# 🖨️ Debug the vip_manager_package_repo for Debian
# This task prints the actual URL for the VIP Manager package for Debian OS
- name: Molecule.tests.variables.asserts.vip_manager_package_repo | Debian | Debug vip_manager_package_repo
  run_once: true
  ansible.builtin.debug:
    var: vip_manager_package_repo

# ✅ Validate the vip_manager_package_repo for Debian
# This task checks if the actual URL matches the expected URL for the VIP Manager package for Debian OS
- name: Molecule.tests.variables.asserts.vip_manager_package_repo | Debian | Validate vip_manager_package_repo
  run_once: true
  ansible.builtin.assert:
    that:
      - vip_manager_package_repo == origin_vip_manager_package_repo
    fail_msg: >
      Assertion failed: vip_manager_package_repo is "{{ vip_manager_package_repo }}",
      but expected "{{ origin_vip_manager_package_repo }}"
    success_msg: "vip_manager_package_repo is correct"

# ===============================================
# 🚀 Start RedHat-specific operations and tests
# ===============================================

# 📁 Incorporate RedHat-specific variables
# This task includes variables that are specific to RedHat OS
- name: Molecule.tests.variables.asserts.vip_manager_package_repo | RedHat | Incorporate RedHat-specific Variables
  run_once: true
  ansible.builtin.include_vars:
    file: ../../../../vars/RedHat.yml

# 🔄 Define the origin_vip_manager_package_repo for RedHat
# This task defines the expected URL for the VIP Manager package for RedHat OS
- name: Molecule.tests.variables.asserts.vip_manager_package_repo | RedHat | Define origin_vip_manager_package_repo
  run_once: true
  ansible.builtin.set_fact: # yamllint disable rule:line-length
    origin_vip_manager_package_repo: "https://github.com/cybertec-postgresql/vip-manager/releases/download/v{{ vip_manager_version }}/vip-manager_{{ vip_manager_version }}_Linux_x86_64.rpm"

# 🖨️ Debug the vip_manager_package_repo for RedHat
# This task prints the actual URL for the VIP Manager package for RedHat OS
- name: Molecule.tests.variables.asserts.vip_manager_package_repo | RedHat | Debug vip_manager_package_repo
  run_once: true
  ansible.builtin.debug:
    var: vip_manager_package_repo

# ✅ Validate the vip_manager_package_repo for RedHat
# This task checks if the actual URL matches the expected URL for the VIP Manager package for RedHat OS
- name: Molecule.tests.variables.asserts.vip_manager_package_repo | RedHat | Validate vip_manager_package_repo
  run_once: true
  ansible.builtin.assert:
    that:
      - vip_manager_package_repo == origin_vip_manager_package_repo
    fail_msg: >
      Assertion failed: vip_manager_package_repo is "{{ vip_manager_package_repo }}",
      but expected "{{ origin_vip_manager_package_repo }}"
    success_msg: "vip_manager_package_repo is correct"
